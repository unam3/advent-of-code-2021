{([(<{}[<>[]}>{[]{[(<()> - Expected ], but found } instea
{([(<{}
{([(<{}[<>
{([(<{}[<>[]
{([(<{}[<>[]}
       ^    ^ must be ]

1. Find closing bracket from the left.
2. Compare it with open bracket to the left.
3. Report error or process rest of the input.


TODOs

+ 1. Rename isLineCorruptedAndWhere (see "works for testInput" test): it's finds out corrupted lines too that must be filtered out.
+ 2. Implement:
    + find the first illegal character in each corrupted line of the navigation subsystem (closing character);
        + find corrupted lines
        + refactor Maybe String to IllegalOrCorrupted = Either String (String, Char)
    + calculate the syntax error score for a line;
    + count total syntax error score for those errors;

3. Pt. 2.
    + get incomplete lines
    - find the completion string for each incomplete line
        - figure out the sequence of closing characters that complete all open chunks in the line.
            + modify IllegalOrCorrupted type to carry incomplete part of the line
    - score the completion strings
    - sort the scores
    - what is the middle score?
