Part 1. How many paths through this cave system are there that visit small caves at most once?

How to represent input data as possible paths?
    + Map String [String]

+ write down rules for pasing
    · if one part is "start" then we only should add "start" to "x" relation
    · if one part is "end" then we only should add "x" to "end" relation
    · otherwise add mutual relations
- implement path making function: constructPaths
    + been able to distinguish capitalized strings (big caves) from relular one (small caves)
    + remove recursion and debug manually
        + why on the first iteration we're having the empty connectedParts? wrong logic in filter function
    - exclude paths which does not reach "end": start-A-b
    - beware of cycles
